{"version":3,"sources":["components/cards/cards.module.css","components/cards/cards.jsx","api/index.js","components/chart/chart.jsx","components/countrypicker/countrypicker.jsx","App.js","index.js","app.module.css","components/chart/chart.module.css","components/countrypicker/countrypicker.module.css"],"names":["module","exports","cards","data","confirmed","deaths","recovered","lastupdate","className","Styles","container","Grid","spacing","justify","item","component","Card","xs","md","CX","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","lastUpdate","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countrypicker","handleCountryChange","FetchCountries","setFetchCountries","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchdata","setState","this","alt","src","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb67571b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__3wH5k\",\"card\":\"cards_card__2ax3X\",\"infected\":\"cards_infected__2kcbn\",\"recovered\":\"cards_recovered__2Yf7E\",\"deaths\":\"cards_deaths__1JmLd\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid,/* StylesProvider*/} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport CX from \"classnames\";\r\n\r\nimport Styles from './cards.module.css'\r\nconst cards =({data:{confirmed,deaths,recovered,lastupdate}})=>{\r\n\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={Styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid  item component={Card} xs={12} md={3} className={CX(Styles.card,Styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastupdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid  item component={Card} xs={12} md={3} className={CX(Styles.card,Styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastupdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered Cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid  item component={Card} xs={12} md={3} className={CX(Styles.card,Styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastupdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default cards","import axios from 'axios';\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\n\r\nexport const fetchData = async (country) => {\r\n    \r\n    let changeableUrl = url ;\r\n    if (country){\r\n        changeableUrl=`${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const { data } = await axios.get(changeableUrl);\r\n\r\n        const modifiedData ={\r\n            confirmed:data.confirmed,\r\n            recovered:data.recovered,\r\n            deaths:data.deaths,\r\n            lastupdate:data.lastUpdate,\r\n        }\r\n        \r\n        return modifiedData;\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        console.log(data)\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n        \r\n        return modifiedData\r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data:{ countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country)=> country.name)\r\n    }catch(error){\r\n\r\n    }\r\n}","import React from 'react';\r\nimport {useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\n\r\nimport Styles from './chart.module.css';\r\n\r\n\r\nconst Charts = ({data:{confirmed,recovered,deaths},country}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        } \r\n        fetchAPI();\r\n    },[]);\r\n    const lineChart = (\r\n        dailyData.length\r\n        ?(<Line \r\n            data={{\r\n                labels: dailyData.map(({ date })=> date),\r\n                datasets:[{\r\n                    data:dailyData.map(({ confirmed })=> confirmed),\r\n                    label:'infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true,\r\n                },{\r\n                    data:dailyData.map(({ deaths })=> deaths),\r\n                    label:'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n\r\n                }],\r\n            }}\r\n        />):null\r\n    );\r\n        \r\n    const barChart = (\r\n            \r\n            confirmed\r\n            ? (\r\n            <Bar \r\n             data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'people',\r\n                    backgroundColor:['blue','green','red'],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`current state in ${country}`}\r\n            }}\r\n            />\r\n            ):null\r\n    );\r\n    return (\r\n        <div className={Styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\nexport default Charts","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport Styles from './countrypicker.module.css'\r\n\r\nconst Countrypicker =({handleCountryChange})=>{\r\n    const [FetchCountries,setFetchCountries]=useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI=async ()=>{\r\n            setFetchCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setFetchCountries]);\r\n\r\n    return (\r\n        <FormControl className={Styles.formcontrol}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>{handleCountryChange(e.target.value)}}>\r\n                <option value=\"\">Global</option>\r\n                {FetchCountries.map((country,i)=><option key={i}value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n};\r\nexport default Countrypicker","import React from 'react';\r\n\r\nimport {Cards,Chart,CountryPicker} from './components'\r\nimport Styles from './app.module.css'\r\nimport { fetchData } from './api'\r\n\r\nclass App extends React.Component{\r\n\r\n    state ={\r\n        data:{\r\n\r\n        },\r\n        country:'',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchdata = await fetchData();\r\n        this.setState({data:fetchdata})\r\n        \r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n        //first fetch data \r\n        const fetchdata = await fetchData(country);\r\n        //then set the state\r\n        this.setState({data:fetchdata,country:country})\r\n        \r\n    }\r\n     render(){\r\n        \r\n        const { data, country } = this.state;\r\n         return(<div className={Styles.container}>\r\n             <img alt=\"\" src=\"https://ewscripps.brightspotcdn.com/dims4/default/3a108ca/2147483647/strip/true/crop/1280x672+0+21/resize/1200x630!/quality/90/?url=https%3A%2F%2Fewscripps.brightspotcdn.com%2F9b%2F1c%2Fd6365aa54b5687a3cb1386a180db%2Fupdate-coronavirus-colorado-live-blog-covid19.png\" className={Styles.image}></img>\r\n             <div className={Styles.container}>\r\n                 <Cards data={data}/>\r\n                 <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                 <Chart data={data} country={country}/>\r\n             </div>\r\n             </div>\r\n         )\r\n     }\r\n }\r\n\r\n export default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__eVUoK\",\"image\":\"app_image__AHj3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__3ezd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"countrypicker_formcontrol__x-IKf\"};"],"sourceRoot":""}